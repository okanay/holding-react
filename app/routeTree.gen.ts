/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LangNotFoundImport } from './routes/$lang/not-found'
import { Route as LangAuthRouteImport } from './routes/$lang/_auth/route'
import { Route as LangAuthLoginImport } from './routes/$lang/_auth/login'
import { Route as LangMainJobsRouteImport } from './routes/$lang/_main/jobs/route'
import { Route as LangMainStatikRouteImport } from './routes/$lang/_main/_statik/route'
import { Route as LangAuthDashboardRouteImport } from './routes/$lang/_auth/dashboard/route'
import { Route as LangMainJobsIndexImport } from './routes/$lang/_main/jobs/index'
import { Route as LangMainStatikIndexImport } from './routes/$lang/_main/_statik/index'
import { Route as LangAuthDashboardIndexImport } from './routes/$lang/_auth/dashboard/index'
import { Route as LangMainStatikTeamImport } from './routes/$lang/_main/_statik/team'
import { Route as LangMainStatikPressImport } from './routes/$lang/_main/_statik/press'
import { Route as LangMainStatikContactImport } from './routes/$lang/_main/_statik/contact'
import { Route as LangMainStatikAboutImport } from './routes/$lang/_main/_statik/about'
import { Route as LangAuthDashboardApplicantsImport } from './routes/$lang/_auth/dashboard/applicants'
import { Route as LangMainJobsSlugRouteImport } from './routes/$lang/_main/jobs/$slug/route'
import { Route as LangMainJobsSlugIndexImport } from './routes/$lang/_main/jobs/$slug/index'
import { Route as LangAuthDashboardJobListImport } from './routes/$lang/_auth/dashboard/job.list'
import { Route as LangAuthDashboardJobCreateImport } from './routes/$lang/_auth/dashboard/job.create'
import { Route as LangMainJobsSlugApplyIndexImport } from './routes/$lang/_main/jobs/$slug/apply.index'
import { Route as LangAuthDashboardJobEditIdImport } from './routes/$lang/_auth/dashboard/job.edit.$id'

// Create Virtual Routes

const LangImport = createFileRoute('/$lang')()

// Create/Update Routes

const LangRoute = LangImport.update({
  id: '/$lang',
  path: '/$lang',
  getParentRoute: () => rootRoute,
} as any)

const LangNotFoundRoute = LangNotFoundImport.update({
  id: '/not-found',
  path: '/not-found',
  getParentRoute: () => LangRoute,
} as any)

const LangAuthRouteRoute = LangAuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => LangRoute,
} as any)

const LangAuthLoginRoute = LangAuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => LangAuthRouteRoute,
} as any)

const LangMainJobsRouteRoute = LangMainJobsRouteImport.update({
  id: '/_main/jobs',
  path: '/jobs',
  getParentRoute: () => LangRoute,
} as any)

const LangMainStatikRouteRoute = LangMainStatikRouteImport.update({
  id: '/_main/_statik',
  getParentRoute: () => LangRoute,
} as any)

const LangAuthDashboardRouteRoute = LangAuthDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => LangAuthRouteRoute,
} as any)

const LangMainJobsIndexRoute = LangMainJobsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LangMainJobsRouteRoute,
} as any)

const LangMainStatikIndexRoute = LangMainStatikIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LangMainStatikRouteRoute,
} as any)

const LangAuthDashboardIndexRoute = LangAuthDashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LangAuthDashboardRouteRoute,
} as any)

const LangMainStatikTeamRoute = LangMainStatikTeamImport.update({
  id: '/team',
  path: '/team',
  getParentRoute: () => LangMainStatikRouteRoute,
} as any)

const LangMainStatikPressRoute = LangMainStatikPressImport.update({
  id: '/press',
  path: '/press',
  getParentRoute: () => LangMainStatikRouteRoute,
} as any)

const LangMainStatikContactRoute = LangMainStatikContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => LangMainStatikRouteRoute,
} as any)

const LangMainStatikAboutRoute = LangMainStatikAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LangMainStatikRouteRoute,
} as any)

const LangAuthDashboardApplicantsRoute =
  LangAuthDashboardApplicantsImport.update({
    id: '/applicants',
    path: '/applicants',
    getParentRoute: () => LangAuthDashboardRouteRoute,
  } as any)

const LangMainJobsSlugRouteRoute = LangMainJobsSlugRouteImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => LangMainJobsRouteRoute,
} as any)

const LangMainJobsSlugIndexRoute = LangMainJobsSlugIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LangMainJobsSlugRouteRoute,
} as any)

const LangAuthDashboardJobListRoute = LangAuthDashboardJobListImport.update({
  id: '/job/list',
  path: '/job/list',
  getParentRoute: () => LangAuthDashboardRouteRoute,
} as any)

const LangAuthDashboardJobCreateRoute = LangAuthDashboardJobCreateImport.update(
  {
    id: '/job/create',
    path: '/job/create',
    getParentRoute: () => LangAuthDashboardRouteRoute,
  } as any,
)

const LangMainJobsSlugApplyIndexRoute = LangMainJobsSlugApplyIndexImport.update(
  {
    id: '/apply/',
    path: '/apply/',
    getParentRoute: () => LangMainJobsSlugRouteRoute,
  } as any,
)

const LangAuthDashboardJobEditIdRoute = LangAuthDashboardJobEditIdImport.update(
  {
    id: '/job/edit/$id',
    path: '/job/edit/$id',
    getParentRoute: () => LangAuthDashboardRouteRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$lang': {
      id: '/$lang'
      path: '/$lang'
      fullPath: '/$lang'
      preLoaderRoute: typeof LangImport
      parentRoute: typeof rootRoute
    }
    '/$lang/_auth': {
      id: '/$lang/_auth'
      path: '/$lang'
      fullPath: '/$lang'
      preLoaderRoute: typeof LangAuthRouteImport
      parentRoute: typeof LangRoute
    }
    '/$lang/not-found': {
      id: '/$lang/not-found'
      path: '/not-found'
      fullPath: '/$lang/not-found'
      preLoaderRoute: typeof LangNotFoundImport
      parentRoute: typeof LangImport
    }
    '/$lang/_auth/dashboard': {
      id: '/$lang/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/$lang/dashboard'
      preLoaderRoute: typeof LangAuthDashboardRouteImport
      parentRoute: typeof LangAuthRouteImport
    }
    '/$lang/_main/_statik': {
      id: '/$lang/_main/_statik'
      path: ''
      fullPath: '/$lang'
      preLoaderRoute: typeof LangMainStatikRouteImport
      parentRoute: typeof LangImport
    }
    '/$lang/_main/jobs': {
      id: '/$lang/_main/jobs'
      path: '/jobs'
      fullPath: '/$lang/jobs'
      preLoaderRoute: typeof LangMainJobsRouteImport
      parentRoute: typeof LangImport
    }
    '/$lang/_auth/login': {
      id: '/$lang/_auth/login'
      path: '/login'
      fullPath: '/$lang/login'
      preLoaderRoute: typeof LangAuthLoginImport
      parentRoute: typeof LangAuthRouteImport
    }
    '/$lang/_main/jobs/$slug': {
      id: '/$lang/_main/jobs/$slug'
      path: '/$slug'
      fullPath: '/$lang/jobs/$slug'
      preLoaderRoute: typeof LangMainJobsSlugRouteImport
      parentRoute: typeof LangMainJobsRouteImport
    }
    '/$lang/_auth/dashboard/applicants': {
      id: '/$lang/_auth/dashboard/applicants'
      path: '/applicants'
      fullPath: '/$lang/dashboard/applicants'
      preLoaderRoute: typeof LangAuthDashboardApplicantsImport
      parentRoute: typeof LangAuthDashboardRouteImport
    }
    '/$lang/_main/_statik/about': {
      id: '/$lang/_main/_statik/about'
      path: '/about'
      fullPath: '/$lang/about'
      preLoaderRoute: typeof LangMainStatikAboutImport
      parentRoute: typeof LangMainStatikRouteImport
    }
    '/$lang/_main/_statik/contact': {
      id: '/$lang/_main/_statik/contact'
      path: '/contact'
      fullPath: '/$lang/contact'
      preLoaderRoute: typeof LangMainStatikContactImport
      parentRoute: typeof LangMainStatikRouteImport
    }
    '/$lang/_main/_statik/press': {
      id: '/$lang/_main/_statik/press'
      path: '/press'
      fullPath: '/$lang/press'
      preLoaderRoute: typeof LangMainStatikPressImport
      parentRoute: typeof LangMainStatikRouteImport
    }
    '/$lang/_main/_statik/team': {
      id: '/$lang/_main/_statik/team'
      path: '/team'
      fullPath: '/$lang/team'
      preLoaderRoute: typeof LangMainStatikTeamImport
      parentRoute: typeof LangMainStatikRouteImport
    }
    '/$lang/_auth/dashboard/': {
      id: '/$lang/_auth/dashboard/'
      path: '/'
      fullPath: '/$lang/dashboard/'
      preLoaderRoute: typeof LangAuthDashboardIndexImport
      parentRoute: typeof LangAuthDashboardRouteImport
    }
    '/$lang/_main/_statik/': {
      id: '/$lang/_main/_statik/'
      path: '/'
      fullPath: '/$lang/'
      preLoaderRoute: typeof LangMainStatikIndexImport
      parentRoute: typeof LangMainStatikRouteImport
    }
    '/$lang/_main/jobs/': {
      id: '/$lang/_main/jobs/'
      path: '/'
      fullPath: '/$lang/jobs/'
      preLoaderRoute: typeof LangMainJobsIndexImport
      parentRoute: typeof LangMainJobsRouteImport
    }
    '/$lang/_auth/dashboard/job/create': {
      id: '/$lang/_auth/dashboard/job/create'
      path: '/job/create'
      fullPath: '/$lang/dashboard/job/create'
      preLoaderRoute: typeof LangAuthDashboardJobCreateImport
      parentRoute: typeof LangAuthDashboardRouteImport
    }
    '/$lang/_auth/dashboard/job/list': {
      id: '/$lang/_auth/dashboard/job/list'
      path: '/job/list'
      fullPath: '/$lang/dashboard/job/list'
      preLoaderRoute: typeof LangAuthDashboardJobListImport
      parentRoute: typeof LangAuthDashboardRouteImport
    }
    '/$lang/_main/jobs/$slug/': {
      id: '/$lang/_main/jobs/$slug/'
      path: '/'
      fullPath: '/$lang/jobs/$slug/'
      preLoaderRoute: typeof LangMainJobsSlugIndexImport
      parentRoute: typeof LangMainJobsSlugRouteImport
    }
    '/$lang/_auth/dashboard/job/edit/$id': {
      id: '/$lang/_auth/dashboard/job/edit/$id'
      path: '/job/edit/$id'
      fullPath: '/$lang/dashboard/job/edit/$id'
      preLoaderRoute: typeof LangAuthDashboardJobEditIdImport
      parentRoute: typeof LangAuthDashboardRouteImport
    }
    '/$lang/_main/jobs/$slug/apply/': {
      id: '/$lang/_main/jobs/$slug/apply/'
      path: '/apply'
      fullPath: '/$lang/jobs/$slug/apply'
      preLoaderRoute: typeof LangMainJobsSlugApplyIndexImport
      parentRoute: typeof LangMainJobsSlugRouteImport
    }
  }
}

// Create and export the route tree

interface LangAuthDashboardRouteRouteChildren {
  LangAuthDashboardApplicantsRoute: typeof LangAuthDashboardApplicantsRoute
  LangAuthDashboardIndexRoute: typeof LangAuthDashboardIndexRoute
  LangAuthDashboardJobCreateRoute: typeof LangAuthDashboardJobCreateRoute
  LangAuthDashboardJobListRoute: typeof LangAuthDashboardJobListRoute
  LangAuthDashboardJobEditIdRoute: typeof LangAuthDashboardJobEditIdRoute
}

const LangAuthDashboardRouteRouteChildren: LangAuthDashboardRouteRouteChildren =
  {
    LangAuthDashboardApplicantsRoute: LangAuthDashboardApplicantsRoute,
    LangAuthDashboardIndexRoute: LangAuthDashboardIndexRoute,
    LangAuthDashboardJobCreateRoute: LangAuthDashboardJobCreateRoute,
    LangAuthDashboardJobListRoute: LangAuthDashboardJobListRoute,
    LangAuthDashboardJobEditIdRoute: LangAuthDashboardJobEditIdRoute,
  }

const LangAuthDashboardRouteRouteWithChildren =
  LangAuthDashboardRouteRoute._addFileChildren(
    LangAuthDashboardRouteRouteChildren,
  )

interface LangAuthRouteRouteChildren {
  LangAuthDashboardRouteRoute: typeof LangAuthDashboardRouteRouteWithChildren
  LangAuthLoginRoute: typeof LangAuthLoginRoute
}

const LangAuthRouteRouteChildren: LangAuthRouteRouteChildren = {
  LangAuthDashboardRouteRoute: LangAuthDashboardRouteRouteWithChildren,
  LangAuthLoginRoute: LangAuthLoginRoute,
}

const LangAuthRouteRouteWithChildren = LangAuthRouteRoute._addFileChildren(
  LangAuthRouteRouteChildren,
)

interface LangMainStatikRouteRouteChildren {
  LangMainStatikAboutRoute: typeof LangMainStatikAboutRoute
  LangMainStatikContactRoute: typeof LangMainStatikContactRoute
  LangMainStatikPressRoute: typeof LangMainStatikPressRoute
  LangMainStatikTeamRoute: typeof LangMainStatikTeamRoute
  LangMainStatikIndexRoute: typeof LangMainStatikIndexRoute
}

const LangMainStatikRouteRouteChildren: LangMainStatikRouteRouteChildren = {
  LangMainStatikAboutRoute: LangMainStatikAboutRoute,
  LangMainStatikContactRoute: LangMainStatikContactRoute,
  LangMainStatikPressRoute: LangMainStatikPressRoute,
  LangMainStatikTeamRoute: LangMainStatikTeamRoute,
  LangMainStatikIndexRoute: LangMainStatikIndexRoute,
}

const LangMainStatikRouteRouteWithChildren =
  LangMainStatikRouteRoute._addFileChildren(LangMainStatikRouteRouteChildren)

interface LangMainJobsSlugRouteRouteChildren {
  LangMainJobsSlugIndexRoute: typeof LangMainJobsSlugIndexRoute
  LangMainJobsSlugApplyIndexRoute: typeof LangMainJobsSlugApplyIndexRoute
}

const LangMainJobsSlugRouteRouteChildren: LangMainJobsSlugRouteRouteChildren = {
  LangMainJobsSlugIndexRoute: LangMainJobsSlugIndexRoute,
  LangMainJobsSlugApplyIndexRoute: LangMainJobsSlugApplyIndexRoute,
}

const LangMainJobsSlugRouteRouteWithChildren =
  LangMainJobsSlugRouteRoute._addFileChildren(
    LangMainJobsSlugRouteRouteChildren,
  )

interface LangMainJobsRouteRouteChildren {
  LangMainJobsSlugRouteRoute: typeof LangMainJobsSlugRouteRouteWithChildren
  LangMainJobsIndexRoute: typeof LangMainJobsIndexRoute
}

const LangMainJobsRouteRouteChildren: LangMainJobsRouteRouteChildren = {
  LangMainJobsSlugRouteRoute: LangMainJobsSlugRouteRouteWithChildren,
  LangMainJobsIndexRoute: LangMainJobsIndexRoute,
}

const LangMainJobsRouteRouteWithChildren =
  LangMainJobsRouteRoute._addFileChildren(LangMainJobsRouteRouteChildren)

interface LangRouteChildren {
  LangAuthRouteRoute: typeof LangAuthRouteRouteWithChildren
  LangNotFoundRoute: typeof LangNotFoundRoute
  LangMainStatikRouteRoute: typeof LangMainStatikRouteRouteWithChildren
  LangMainJobsRouteRoute: typeof LangMainJobsRouteRouteWithChildren
}

const LangRouteChildren: LangRouteChildren = {
  LangAuthRouteRoute: LangAuthRouteRouteWithChildren,
  LangNotFoundRoute: LangNotFoundRoute,
  LangMainStatikRouteRoute: LangMainStatikRouteRouteWithChildren,
  LangMainJobsRouteRoute: LangMainJobsRouteRouteWithChildren,
}

const LangRouteWithChildren = LangRoute._addFileChildren(LangRouteChildren)

export interface FileRoutesByFullPath {
  '/$lang': typeof LangMainStatikRouteRouteWithChildren
  '/$lang/not-found': typeof LangNotFoundRoute
  '/$lang/dashboard': typeof LangAuthDashboardRouteRouteWithChildren
  '/$lang/jobs': typeof LangMainJobsRouteRouteWithChildren
  '/$lang/login': typeof LangAuthLoginRoute
  '/$lang/jobs/$slug': typeof LangMainJobsSlugRouteRouteWithChildren
  '/$lang/dashboard/applicants': typeof LangAuthDashboardApplicantsRoute
  '/$lang/about': typeof LangMainStatikAboutRoute
  '/$lang/contact': typeof LangMainStatikContactRoute
  '/$lang/press': typeof LangMainStatikPressRoute
  '/$lang/team': typeof LangMainStatikTeamRoute
  '/$lang/dashboard/': typeof LangAuthDashboardIndexRoute
  '/$lang/': typeof LangMainStatikIndexRoute
  '/$lang/jobs/': typeof LangMainJobsIndexRoute
  '/$lang/dashboard/job/create': typeof LangAuthDashboardJobCreateRoute
  '/$lang/dashboard/job/list': typeof LangAuthDashboardJobListRoute
  '/$lang/jobs/$slug/': typeof LangMainJobsSlugIndexRoute
  '/$lang/dashboard/job/edit/$id': typeof LangAuthDashboardJobEditIdRoute
  '/$lang/jobs/$slug/apply': typeof LangMainJobsSlugApplyIndexRoute
}

export interface FileRoutesByTo {
  '/$lang': typeof LangMainStatikIndexRoute
  '/$lang/not-found': typeof LangNotFoundRoute
  '/$lang/login': typeof LangAuthLoginRoute
  '/$lang/dashboard/applicants': typeof LangAuthDashboardApplicantsRoute
  '/$lang/about': typeof LangMainStatikAboutRoute
  '/$lang/contact': typeof LangMainStatikContactRoute
  '/$lang/press': typeof LangMainStatikPressRoute
  '/$lang/team': typeof LangMainStatikTeamRoute
  '/$lang/dashboard': typeof LangAuthDashboardIndexRoute
  '/$lang/jobs': typeof LangMainJobsIndexRoute
  '/$lang/dashboard/job/create': typeof LangAuthDashboardJobCreateRoute
  '/$lang/dashboard/job/list': typeof LangAuthDashboardJobListRoute
  '/$lang/jobs/$slug': typeof LangMainJobsSlugIndexRoute
  '/$lang/dashboard/job/edit/$id': typeof LangAuthDashboardJobEditIdRoute
  '/$lang/jobs/$slug/apply': typeof LangMainJobsSlugApplyIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/$lang': typeof LangRouteWithChildren
  '/$lang/_auth': typeof LangAuthRouteRouteWithChildren
  '/$lang/not-found': typeof LangNotFoundRoute
  '/$lang/_auth/dashboard': typeof LangAuthDashboardRouteRouteWithChildren
  '/$lang/_main/_statik': typeof LangMainStatikRouteRouteWithChildren
  '/$lang/_main/jobs': typeof LangMainJobsRouteRouteWithChildren
  '/$lang/_auth/login': typeof LangAuthLoginRoute
  '/$lang/_main/jobs/$slug': typeof LangMainJobsSlugRouteRouteWithChildren
  '/$lang/_auth/dashboard/applicants': typeof LangAuthDashboardApplicantsRoute
  '/$lang/_main/_statik/about': typeof LangMainStatikAboutRoute
  '/$lang/_main/_statik/contact': typeof LangMainStatikContactRoute
  '/$lang/_main/_statik/press': typeof LangMainStatikPressRoute
  '/$lang/_main/_statik/team': typeof LangMainStatikTeamRoute
  '/$lang/_auth/dashboard/': typeof LangAuthDashboardIndexRoute
  '/$lang/_main/_statik/': typeof LangMainStatikIndexRoute
  '/$lang/_main/jobs/': typeof LangMainJobsIndexRoute
  '/$lang/_auth/dashboard/job/create': typeof LangAuthDashboardJobCreateRoute
  '/$lang/_auth/dashboard/job/list': typeof LangAuthDashboardJobListRoute
  '/$lang/_main/jobs/$slug/': typeof LangMainJobsSlugIndexRoute
  '/$lang/_auth/dashboard/job/edit/$id': typeof LangAuthDashboardJobEditIdRoute
  '/$lang/_main/jobs/$slug/apply/': typeof LangMainJobsSlugApplyIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$lang'
    | '/$lang/not-found'
    | '/$lang/dashboard'
    | '/$lang/jobs'
    | '/$lang/login'
    | '/$lang/jobs/$slug'
    | '/$lang/dashboard/applicants'
    | '/$lang/about'
    | '/$lang/contact'
    | '/$lang/press'
    | '/$lang/team'
    | '/$lang/dashboard/'
    | '/$lang/'
    | '/$lang/jobs/'
    | '/$lang/dashboard/job/create'
    | '/$lang/dashboard/job/list'
    | '/$lang/jobs/$slug/'
    | '/$lang/dashboard/job/edit/$id'
    | '/$lang/jobs/$slug/apply'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$lang'
    | '/$lang/not-found'
    | '/$lang/login'
    | '/$lang/dashboard/applicants'
    | '/$lang/about'
    | '/$lang/contact'
    | '/$lang/press'
    | '/$lang/team'
    | '/$lang/dashboard'
    | '/$lang/jobs'
    | '/$lang/dashboard/job/create'
    | '/$lang/dashboard/job/list'
    | '/$lang/jobs/$slug'
    | '/$lang/dashboard/job/edit/$id'
    | '/$lang/jobs/$slug/apply'
  id:
    | '__root__'
    | '/$lang'
    | '/$lang/_auth'
    | '/$lang/not-found'
    | '/$lang/_auth/dashboard'
    | '/$lang/_main/_statik'
    | '/$lang/_main/jobs'
    | '/$lang/_auth/login'
    | '/$lang/_main/jobs/$slug'
    | '/$lang/_auth/dashboard/applicants'
    | '/$lang/_main/_statik/about'
    | '/$lang/_main/_statik/contact'
    | '/$lang/_main/_statik/press'
    | '/$lang/_main/_statik/team'
    | '/$lang/_auth/dashboard/'
    | '/$lang/_main/_statik/'
    | '/$lang/_main/jobs/'
    | '/$lang/_auth/dashboard/job/create'
    | '/$lang/_auth/dashboard/job/list'
    | '/$lang/_main/jobs/$slug/'
    | '/$lang/_auth/dashboard/job/edit/$id'
    | '/$lang/_main/jobs/$slug/apply/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LangRoute: typeof LangRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LangRoute: LangRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/$lang"
      ]
    },
    "/$lang": {
      "filePath": "$lang/_auth",
      "children": [
        "/$lang/_auth",
        "/$lang/not-found",
        "/$lang/_main/_statik",
        "/$lang/_main/jobs"
      ]
    },
    "/$lang/_auth": {
      "filePath": "$lang/_auth/route.tsx",
      "parent": "/$lang",
      "children": [
        "/$lang/_auth/dashboard",
        "/$lang/_auth/login"
      ]
    },
    "/$lang/not-found": {
      "filePath": "$lang/not-found.tsx",
      "parent": "/$lang"
    },
    "/$lang/_auth/dashboard": {
      "filePath": "$lang/_auth/dashboard/route.tsx",
      "parent": "/$lang/_auth",
      "children": [
        "/$lang/_auth/dashboard/applicants",
        "/$lang/_auth/dashboard/",
        "/$lang/_auth/dashboard/job/create",
        "/$lang/_auth/dashboard/job/list",
        "/$lang/_auth/dashboard/job/edit/$id"
      ]
    },
    "/$lang/_main/_statik": {
      "filePath": "$lang/_main/_statik/route.tsx",
      "parent": "/$lang",
      "children": [
        "/$lang/_main/_statik/about",
        "/$lang/_main/_statik/contact",
        "/$lang/_main/_statik/press",
        "/$lang/_main/_statik/team",
        "/$lang/_main/_statik/"
      ]
    },
    "/$lang/_main/jobs": {
      "filePath": "$lang/_main/jobs/route.tsx",
      "parent": "/$lang",
      "children": [
        "/$lang/_main/jobs/$slug",
        "/$lang/_main/jobs/"
      ]
    },
    "/$lang/_auth/login": {
      "filePath": "$lang/_auth/login.tsx",
      "parent": "/$lang/_auth"
    },
    "/$lang/_main/jobs/$slug": {
      "filePath": "$lang/_main/jobs/$slug/route.tsx",
      "parent": "/$lang/_main/jobs",
      "children": [
        "/$lang/_main/jobs/$slug/",
        "/$lang/_main/jobs/$slug/apply/"
      ]
    },
    "/$lang/_auth/dashboard/applicants": {
      "filePath": "$lang/_auth/dashboard/applicants.tsx",
      "parent": "/$lang/_auth/dashboard"
    },
    "/$lang/_main/_statik/about": {
      "filePath": "$lang/_main/_statik/about.tsx",
      "parent": "/$lang/_main/_statik"
    },
    "/$lang/_main/_statik/contact": {
      "filePath": "$lang/_main/_statik/contact.tsx",
      "parent": "/$lang/_main/_statik"
    },
    "/$lang/_main/_statik/press": {
      "filePath": "$lang/_main/_statik/press.tsx",
      "parent": "/$lang/_main/_statik"
    },
    "/$lang/_main/_statik/team": {
      "filePath": "$lang/_main/_statik/team.tsx",
      "parent": "/$lang/_main/_statik"
    },
    "/$lang/_auth/dashboard/": {
      "filePath": "$lang/_auth/dashboard/index.tsx",
      "parent": "/$lang/_auth/dashboard"
    },
    "/$lang/_main/_statik/": {
      "filePath": "$lang/_main/_statik/index.tsx",
      "parent": "/$lang/_main/_statik"
    },
    "/$lang/_main/jobs/": {
      "filePath": "$lang/_main/jobs/index.tsx",
      "parent": "/$lang/_main/jobs"
    },
    "/$lang/_auth/dashboard/job/create": {
      "filePath": "$lang/_auth/dashboard/job.create.tsx",
      "parent": "/$lang/_auth/dashboard"
    },
    "/$lang/_auth/dashboard/job/list": {
      "filePath": "$lang/_auth/dashboard/job.list.tsx",
      "parent": "/$lang/_auth/dashboard"
    },
    "/$lang/_main/jobs/$slug/": {
      "filePath": "$lang/_main/jobs/$slug/index.tsx",
      "parent": "/$lang/_main/jobs/$slug"
    },
    "/$lang/_auth/dashboard/job/edit/$id": {
      "filePath": "$lang/_auth/dashboard/job.edit.$id.tsx",
      "parent": "/$lang/_auth/dashboard"
    },
    "/$lang/_main/jobs/$slug/apply/": {
      "filePath": "$lang/_main/jobs/$slug/apply.index.tsx",
      "parent": "/$lang/_main/jobs/$slug"
    }
  }
}
ROUTE_MANIFEST_END */
