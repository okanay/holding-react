/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LangNotFoundImport } from './routes/$lang/not-found'
import { Route as LangMainRouteImport } from './routes/$lang/_main/route'
import { Route as LangAuthRouteImport } from './routes/$lang/_auth/route'
import { Route as LangMainIndexImport } from './routes/$lang/_main/index'
import { Route as LangAuthLoginImport } from './routes/$lang/_auth/login'
import { Route as LangMainJobRouteImport } from './routes/$lang/_main/job/route'
import { Route as LangAuthDashboardRouteImport } from './routes/$lang/_auth/dashboard/route'
import { Route as LangMainJobIndexImport } from './routes/$lang/_main/job/index'
import { Route as LangAuthDashboardIndexImport } from './routes/$lang/_auth/dashboard/index'
import { Route as LangAuthDashboardCreateNewJobImport } from './routes/$lang/_auth/dashboard/create-new-job'
import { Route as LangMainJobSlugRouteImport } from './routes/$lang/_main/job/$slug/route'
import { Route as LangMainJobSlugIndexImport } from './routes/$lang/_main/job/$slug/index'
import { Route as LangMainJobSlugApplyIndexImport } from './routes/$lang/_main/job/$slug/apply.index'

// Create Virtual Routes

const LangImport = createFileRoute('/$lang')()

// Create/Update Routes

const LangRoute = LangImport.update({
  id: '/$lang',
  path: '/$lang',
  getParentRoute: () => rootRoute,
} as any)

const LangNotFoundRoute = LangNotFoundImport.update({
  id: '/not-found',
  path: '/not-found',
  getParentRoute: () => LangRoute,
} as any)

const LangMainRouteRoute = LangMainRouteImport.update({
  id: '/_main',
  getParentRoute: () => LangRoute,
} as any)

const LangAuthRouteRoute = LangAuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => LangRoute,
} as any)

const LangMainIndexRoute = LangMainIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LangMainRouteRoute,
} as any)

const LangAuthLoginRoute = LangAuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => LangAuthRouteRoute,
} as any)

const LangMainJobRouteRoute = LangMainJobRouteImport.update({
  id: '/job',
  path: '/job',
  getParentRoute: () => LangMainRouteRoute,
} as any)

const LangAuthDashboardRouteRoute = LangAuthDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => LangAuthRouteRoute,
} as any)

const LangMainJobIndexRoute = LangMainJobIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LangMainJobRouteRoute,
} as any)

const LangAuthDashboardIndexRoute = LangAuthDashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LangAuthDashboardRouteRoute,
} as any)

const LangAuthDashboardCreateNewJobRoute =
  LangAuthDashboardCreateNewJobImport.update({
    id: '/create-new-job',
    path: '/create-new-job',
    getParentRoute: () => LangAuthDashboardRouteRoute,
  } as any)

const LangMainJobSlugRouteRoute = LangMainJobSlugRouteImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => LangMainJobRouteRoute,
} as any)

const LangMainJobSlugIndexRoute = LangMainJobSlugIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LangMainJobSlugRouteRoute,
} as any)

const LangMainJobSlugApplyIndexRoute = LangMainJobSlugApplyIndexImport.update({
  id: '/apply/',
  path: '/apply/',
  getParentRoute: () => LangMainJobSlugRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$lang': {
      id: '/$lang'
      path: '/$lang'
      fullPath: '/$lang'
      preLoaderRoute: typeof LangImport
      parentRoute: typeof rootRoute
    }
    '/$lang/_auth': {
      id: '/$lang/_auth'
      path: '/$lang'
      fullPath: '/$lang'
      preLoaderRoute: typeof LangAuthRouteImport
      parentRoute: typeof LangRoute
    }
    '/$lang/_main': {
      id: '/$lang/_main'
      path: ''
      fullPath: '/$lang'
      preLoaderRoute: typeof LangMainRouteImport
      parentRoute: typeof LangImport
    }
    '/$lang/not-found': {
      id: '/$lang/not-found'
      path: '/not-found'
      fullPath: '/$lang/not-found'
      preLoaderRoute: typeof LangNotFoundImport
      parentRoute: typeof LangImport
    }
    '/$lang/_auth/dashboard': {
      id: '/$lang/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/$lang/dashboard'
      preLoaderRoute: typeof LangAuthDashboardRouteImport
      parentRoute: typeof LangAuthRouteImport
    }
    '/$lang/_main/job': {
      id: '/$lang/_main/job'
      path: '/job'
      fullPath: '/$lang/job'
      preLoaderRoute: typeof LangMainJobRouteImport
      parentRoute: typeof LangMainRouteImport
    }
    '/$lang/_auth/login': {
      id: '/$lang/_auth/login'
      path: '/login'
      fullPath: '/$lang/login'
      preLoaderRoute: typeof LangAuthLoginImport
      parentRoute: typeof LangAuthRouteImport
    }
    '/$lang/_main/': {
      id: '/$lang/_main/'
      path: '/'
      fullPath: '/$lang/'
      preLoaderRoute: typeof LangMainIndexImport
      parentRoute: typeof LangMainRouteImport
    }
    '/$lang/_main/job/$slug': {
      id: '/$lang/_main/job/$slug'
      path: '/$slug'
      fullPath: '/$lang/job/$slug'
      preLoaderRoute: typeof LangMainJobSlugRouteImport
      parentRoute: typeof LangMainJobRouteImport
    }
    '/$lang/_auth/dashboard/create-new-job': {
      id: '/$lang/_auth/dashboard/create-new-job'
      path: '/create-new-job'
      fullPath: '/$lang/dashboard/create-new-job'
      preLoaderRoute: typeof LangAuthDashboardCreateNewJobImport
      parentRoute: typeof LangAuthDashboardRouteImport
    }
    '/$lang/_auth/dashboard/': {
      id: '/$lang/_auth/dashboard/'
      path: '/'
      fullPath: '/$lang/dashboard/'
      preLoaderRoute: typeof LangAuthDashboardIndexImport
      parentRoute: typeof LangAuthDashboardRouteImport
    }
    '/$lang/_main/job/': {
      id: '/$lang/_main/job/'
      path: '/'
      fullPath: '/$lang/job/'
      preLoaderRoute: typeof LangMainJobIndexImport
      parentRoute: typeof LangMainJobRouteImport
    }
    '/$lang/_main/job/$slug/': {
      id: '/$lang/_main/job/$slug/'
      path: '/'
      fullPath: '/$lang/job/$slug/'
      preLoaderRoute: typeof LangMainJobSlugIndexImport
      parentRoute: typeof LangMainJobSlugRouteImport
    }
    '/$lang/_main/job/$slug/apply/': {
      id: '/$lang/_main/job/$slug/apply/'
      path: '/apply'
      fullPath: '/$lang/job/$slug/apply'
      preLoaderRoute: typeof LangMainJobSlugApplyIndexImport
      parentRoute: typeof LangMainJobSlugRouteImport
    }
  }
}

// Create and export the route tree

interface LangAuthDashboardRouteRouteChildren {
  LangAuthDashboardCreateNewJobRoute: typeof LangAuthDashboardCreateNewJobRoute
  LangAuthDashboardIndexRoute: typeof LangAuthDashboardIndexRoute
}

const LangAuthDashboardRouteRouteChildren: LangAuthDashboardRouteRouteChildren =
  {
    LangAuthDashboardCreateNewJobRoute: LangAuthDashboardCreateNewJobRoute,
    LangAuthDashboardIndexRoute: LangAuthDashboardIndexRoute,
  }

const LangAuthDashboardRouteRouteWithChildren =
  LangAuthDashboardRouteRoute._addFileChildren(
    LangAuthDashboardRouteRouteChildren,
  )

interface LangAuthRouteRouteChildren {
  LangAuthDashboardRouteRoute: typeof LangAuthDashboardRouteRouteWithChildren
  LangAuthLoginRoute: typeof LangAuthLoginRoute
}

const LangAuthRouteRouteChildren: LangAuthRouteRouteChildren = {
  LangAuthDashboardRouteRoute: LangAuthDashboardRouteRouteWithChildren,
  LangAuthLoginRoute: LangAuthLoginRoute,
}

const LangAuthRouteRouteWithChildren = LangAuthRouteRoute._addFileChildren(
  LangAuthRouteRouteChildren,
)

interface LangMainJobSlugRouteRouteChildren {
  LangMainJobSlugIndexRoute: typeof LangMainJobSlugIndexRoute
  LangMainJobSlugApplyIndexRoute: typeof LangMainJobSlugApplyIndexRoute
}

const LangMainJobSlugRouteRouteChildren: LangMainJobSlugRouteRouteChildren = {
  LangMainJobSlugIndexRoute: LangMainJobSlugIndexRoute,
  LangMainJobSlugApplyIndexRoute: LangMainJobSlugApplyIndexRoute,
}

const LangMainJobSlugRouteRouteWithChildren =
  LangMainJobSlugRouteRoute._addFileChildren(LangMainJobSlugRouteRouteChildren)

interface LangMainJobRouteRouteChildren {
  LangMainJobSlugRouteRoute: typeof LangMainJobSlugRouteRouteWithChildren
  LangMainJobIndexRoute: typeof LangMainJobIndexRoute
}

const LangMainJobRouteRouteChildren: LangMainJobRouteRouteChildren = {
  LangMainJobSlugRouteRoute: LangMainJobSlugRouteRouteWithChildren,
  LangMainJobIndexRoute: LangMainJobIndexRoute,
}

const LangMainJobRouteRouteWithChildren =
  LangMainJobRouteRoute._addFileChildren(LangMainJobRouteRouteChildren)

interface LangMainRouteRouteChildren {
  LangMainJobRouteRoute: typeof LangMainJobRouteRouteWithChildren
  LangMainIndexRoute: typeof LangMainIndexRoute
}

const LangMainRouteRouteChildren: LangMainRouteRouteChildren = {
  LangMainJobRouteRoute: LangMainJobRouteRouteWithChildren,
  LangMainIndexRoute: LangMainIndexRoute,
}

const LangMainRouteRouteWithChildren = LangMainRouteRoute._addFileChildren(
  LangMainRouteRouteChildren,
)

interface LangRouteChildren {
  LangAuthRouteRoute: typeof LangAuthRouteRouteWithChildren
  LangMainRouteRoute: typeof LangMainRouteRouteWithChildren
  LangNotFoundRoute: typeof LangNotFoundRoute
}

const LangRouteChildren: LangRouteChildren = {
  LangAuthRouteRoute: LangAuthRouteRouteWithChildren,
  LangMainRouteRoute: LangMainRouteRouteWithChildren,
  LangNotFoundRoute: LangNotFoundRoute,
}

const LangRouteWithChildren = LangRoute._addFileChildren(LangRouteChildren)

export interface FileRoutesByFullPath {
  '/$lang': typeof LangMainRouteRouteWithChildren
  '/$lang/not-found': typeof LangNotFoundRoute
  '/$lang/dashboard': typeof LangAuthDashboardRouteRouteWithChildren
  '/$lang/job': typeof LangMainJobRouteRouteWithChildren
  '/$lang/login': typeof LangAuthLoginRoute
  '/$lang/': typeof LangMainIndexRoute
  '/$lang/job/$slug': typeof LangMainJobSlugRouteRouteWithChildren
  '/$lang/dashboard/create-new-job': typeof LangAuthDashboardCreateNewJobRoute
  '/$lang/dashboard/': typeof LangAuthDashboardIndexRoute
  '/$lang/job/': typeof LangMainJobIndexRoute
  '/$lang/job/$slug/': typeof LangMainJobSlugIndexRoute
  '/$lang/job/$slug/apply': typeof LangMainJobSlugApplyIndexRoute
}

export interface FileRoutesByTo {
  '/$lang': typeof LangMainIndexRoute
  '/$lang/not-found': typeof LangNotFoundRoute
  '/$lang/login': typeof LangAuthLoginRoute
  '/$lang/dashboard/create-new-job': typeof LangAuthDashboardCreateNewJobRoute
  '/$lang/dashboard': typeof LangAuthDashboardIndexRoute
  '/$lang/job': typeof LangMainJobIndexRoute
  '/$lang/job/$slug': typeof LangMainJobSlugIndexRoute
  '/$lang/job/$slug/apply': typeof LangMainJobSlugApplyIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/$lang': typeof LangRouteWithChildren
  '/$lang/_auth': typeof LangAuthRouteRouteWithChildren
  '/$lang/_main': typeof LangMainRouteRouteWithChildren
  '/$lang/not-found': typeof LangNotFoundRoute
  '/$lang/_auth/dashboard': typeof LangAuthDashboardRouteRouteWithChildren
  '/$lang/_main/job': typeof LangMainJobRouteRouteWithChildren
  '/$lang/_auth/login': typeof LangAuthLoginRoute
  '/$lang/_main/': typeof LangMainIndexRoute
  '/$lang/_main/job/$slug': typeof LangMainJobSlugRouteRouteWithChildren
  '/$lang/_auth/dashboard/create-new-job': typeof LangAuthDashboardCreateNewJobRoute
  '/$lang/_auth/dashboard/': typeof LangAuthDashboardIndexRoute
  '/$lang/_main/job/': typeof LangMainJobIndexRoute
  '/$lang/_main/job/$slug/': typeof LangMainJobSlugIndexRoute
  '/$lang/_main/job/$slug/apply/': typeof LangMainJobSlugApplyIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$lang'
    | '/$lang/not-found'
    | '/$lang/dashboard'
    | '/$lang/job'
    | '/$lang/login'
    | '/$lang/'
    | '/$lang/job/$slug'
    | '/$lang/dashboard/create-new-job'
    | '/$lang/dashboard/'
    | '/$lang/job/'
    | '/$lang/job/$slug/'
    | '/$lang/job/$slug/apply'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$lang'
    | '/$lang/not-found'
    | '/$lang/login'
    | '/$lang/dashboard/create-new-job'
    | '/$lang/dashboard'
    | '/$lang/job'
    | '/$lang/job/$slug'
    | '/$lang/job/$slug/apply'
  id:
    | '__root__'
    | '/$lang'
    | '/$lang/_auth'
    | '/$lang/_main'
    | '/$lang/not-found'
    | '/$lang/_auth/dashboard'
    | '/$lang/_main/job'
    | '/$lang/_auth/login'
    | '/$lang/_main/'
    | '/$lang/_main/job/$slug'
    | '/$lang/_auth/dashboard/create-new-job'
    | '/$lang/_auth/dashboard/'
    | '/$lang/_main/job/'
    | '/$lang/_main/job/$slug/'
    | '/$lang/_main/job/$slug/apply/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LangRoute: typeof LangRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LangRoute: LangRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/$lang"
      ]
    },
    "/$lang": {
      "filePath": "$lang/_auth",
      "children": [
        "/$lang/_auth",
        "/$lang/_main",
        "/$lang/not-found"
      ]
    },
    "/$lang/_auth": {
      "filePath": "$lang/_auth/route.tsx",
      "parent": "/$lang",
      "children": [
        "/$lang/_auth/dashboard",
        "/$lang/_auth/login"
      ]
    },
    "/$lang/_main": {
      "filePath": "$lang/_main/route.tsx",
      "parent": "/$lang",
      "children": [
        "/$lang/_main/job",
        "/$lang/_main/"
      ]
    },
    "/$lang/not-found": {
      "filePath": "$lang/not-found.tsx",
      "parent": "/$lang"
    },
    "/$lang/_auth/dashboard": {
      "filePath": "$lang/_auth/dashboard/route.tsx",
      "parent": "/$lang/_auth",
      "children": [
        "/$lang/_auth/dashboard/create-new-job",
        "/$lang/_auth/dashboard/"
      ]
    },
    "/$lang/_main/job": {
      "filePath": "$lang/_main/job/route.tsx",
      "parent": "/$lang/_main",
      "children": [
        "/$lang/_main/job/$slug",
        "/$lang/_main/job/"
      ]
    },
    "/$lang/_auth/login": {
      "filePath": "$lang/_auth/login.tsx",
      "parent": "/$lang/_auth"
    },
    "/$lang/_main/": {
      "filePath": "$lang/_main/index.tsx",
      "parent": "/$lang/_main"
    },
    "/$lang/_main/job/$slug": {
      "filePath": "$lang/_main/job/$slug/route.tsx",
      "parent": "/$lang/_main/job",
      "children": [
        "/$lang/_main/job/$slug/",
        "/$lang/_main/job/$slug/apply/"
      ]
    },
    "/$lang/_auth/dashboard/create-new-job": {
      "filePath": "$lang/_auth/dashboard/create-new-job.tsx",
      "parent": "/$lang/_auth/dashboard"
    },
    "/$lang/_auth/dashboard/": {
      "filePath": "$lang/_auth/dashboard/index.tsx",
      "parent": "/$lang/_auth/dashboard"
    },
    "/$lang/_main/job/": {
      "filePath": "$lang/_main/job/index.tsx",
      "parent": "/$lang/_main/job"
    },
    "/$lang/_main/job/$slug/": {
      "filePath": "$lang/_main/job/$slug/index.tsx",
      "parent": "/$lang/_main/job/$slug"
    },
    "/$lang/_main/job/$slug/apply/": {
      "filePath": "$lang/_main/job/$slug/apply.index.tsx",
      "parent": "/$lang/_main/job/$slug"
    }
  }
}
ROUTE_MANIFEST_END */
